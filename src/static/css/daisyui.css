:root {
	color-scheme: light;
	--in: 0.7206 0.191 231.6;
	--su: 64.8% 0.15 160;
	--wa: 0.8471 0.199 83.87;
	--er: 0.7176 0.221 22.18;
	--pc: 0.89824 0.06192 275.75;
	--ac: 0.15352 0.0368 183.61;
	--inc: 0 0 0;
	--suc: 0 0 0;
	--wac: 0 0 0;
	--erc: 0 0 0;
	--rounded-box: 1rem;
	--rounded-btn: 0.5rem;
	--rounded-badge: 1.9rem;
	--animation-btn: 0.25s;
	--animation-input: 0.2s;
	--btn-focus-scale: 0.95;
	--border-btn: 1px;
	--tab-border: 1px;
	--tab-radius: 0.5rem;
	--p: 0.4912 0.3096 275.75;
	--s: 0.6971 0.329 342.55;
	--sc: 0.9871 0.0106 342.55;
	--a: 0.7676 0.184 183.61;
	--n: 0.321785 0.02476 255.701624;
	--nc: 0.894994 0.011585 252.096176;
	--b1: 1 0 0;
	--b2: 0.961151 0 0;
	--b3: 0.924169 0.00108 197.137559;
	--bc: 0.278078 0.029596 256.847952;
}
*,
::after,
::before {
	box-sizing: border-box;
	border-width: 0;
	border-style: solid;
	border-color: currentColor;
}
::after,
::before {
	--tw-content: '';
}
html {
	line-height: 1.5;
	-webkit-text-size-adjust: 100%;
	tab-size: 4;
	font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji',
		'Segoe UI Symbol', 'Noto Color Emoji';
	font-feature-settings: normal;
	font-variation-settings: normal;
}
body {
	margin: 0;
	line-height: inherit;
}
hr {
	height: 0;
	color: inherit;
	border-top-width: 1px;
}
abbr:where([title]) {
	-webkit-text-decoration: underline dotted;
	text-decoration: underline dotted;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	font-size: inherit;
	font-weight: inherit;
}
a {
	color: inherit;
	text-decoration: inherit;
}
b,
strong {
	font-weight: bolder;
}
code,
kbd,
pre,
samp {
	font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
	font-size: 1em;
}
small {
	font-size: 80%;
}
sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}
sub {
	bottom: -0.25em;
}
sup {
	top: -0.5em;
}
table {
	text-indent: 0;
	border-color: inherit;
	border-collapse: collapse;
}
button,
input,
optgroup,
select,
textarea {
	font-family: inherit;
	font-feature-settings: inherit;
	font-variation-settings: inherit;
	font-size: 100%;
	font-weight: inherit;
	line-height: inherit;
	color: inherit;
	margin: 0;
	padding: 0;
}
button,
select {
	text-transform: none;
}
[type='button'],
[type='reset'],
[type='submit'],
button {
	-webkit-appearance: button;
	background-color: transparent;
	background-image: none;
}
:-moz-focusring {
	outline: auto;
}
:-moz-ui-invalid {
	box-shadow: none;
}
progress {
	vertical-align: baseline;
}
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}
[type='search'] {
	-webkit-appearance: textfield;
	outline-offset: -2px;
}
::-webkit-search-decoration {
	-webkit-appearance: none;
}
::-webkit-file-upload-button {
	-webkit-appearance: button;
	font: inherit;
}
summary {
	display: list-item;
}
blockquote,
dd,
dl,
figure,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
p,
pre {
	margin: 0;
}
fieldset {
	margin: 0;
	padding: 0;
}
legend {
	padding: 0;
}
menu,
ol,
ul {
	list-style: none;
	margin: 0;
	padding: 0;
}
dialog {
	padding: 0;
}
textarea {
	resize: vertical;
}
input::placeholder,
textarea::placeholder {
	opacity: 1;
	color: #9ca3af;
}
[role='button'],
button {
	cursor: pointer;
}
:disabled {
	cursor: default;
}
audio,
canvas,
embed,
iframe,
img,
object,
svg,
video {
	display: block;
	vertical-align: middle;
}
img,
video {
	max-width: 100%;
	height: auto;
}
[hidden] {
	display: none;
}
:root,
[data-theme] {
	background-color: var(--fallback-b1, oklch(var(--b1) / 1));
	color: var(--fallback-bc, oklch(var(--bc) / 1));
}
@supports not (color: oklch(0 0 0)) {
	:root {
		color-scheme: light;
		--fallback-p: #491eff;
		--fallback-pc: #d4dbff;
		--fallback-s: #ff41c7;
		--fallback-sc: #fff9fc;
		--fallback-a: #00cfbd;
		--fallback-ac: #00100d;
		--fallback-n: #2b3440;
		--fallback-nc: #d7dde4;
		--fallback-b1: #ffffff;
		--fallback-b2: #e5e6e6;
		--fallback-b3: #e5e6e6;
		--fallback-bc: #1f2937;
		--fallback-in: #00b3f0;
		--fallback-inc: #000000;
		--fallback-su: #00ca92;
		--fallback-suc: #000000;
		--fallback-wa: #ffc22d;
		--fallback-wac: #000000;
		--fallback-er: #ff6f70;
		--fallback-erc: #000000;
	}
	@media (prefers-color-scheme: dark) {
		:root {
			color-scheme: dark;
			--fallback-p: #7582ff;
			--fallback-pc: #050617;
			--fallback-s: #ff71cf;
			--fallback-sc: #190211;
			--fallback-a: #00c7b5;
			--fallback-ac: #000e0c;
			--fallback-n: #2a323c;
			--fallback-nc: #a6adbb;
			--fallback-b1: #1d232a;
			--fallback-b2: #191e24;
			--fallback-b3: #15191e;
			--fallback-bc: #a6adbb;
			--fallback-in: #00b3f0;
			--fallback-inc: #000000;
			--fallback-su: #00ca92;
			--fallback-suc: #000000;
			--fallback-wa: #ffc22d;
			--fallback-wac: #000000;
			--fallback-er: #ff6f70;
			--fallback-erc: #000000;
		}
	}
}
html {
	-webkit-tap-highlight-color: transparent;
}
*,
::after,
::before {
	--tw-gradient-from-position: ;
	--tw-gradient-via-position: ;
	--tw-gradient-to-position: ;
	--tw-ring-inset: ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgb(59 130 246 / 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
}
::backdrop {
	--tw-gradient-from-position: ;
	--tw-gradient-via-position: ;
	--tw-gradient-to-position: ;
	--tw-ring-inset: ;
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgb(59 130 246 / 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
}
.btn {
	display: inline-flex;
	height: 3rem;
	min-height: 3rem;
	flex-shrink: 0;
	cursor: pointer;
	-webkit-user-select: none;
	user-select: none;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	border-radius: var(--rounded-btn, 0.5rem);
	border-color: transparent;
	border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
	padding-left: 1rem;
	padding-right: 1rem;
	text-align: center;
	font-size: 0.875rem;
	line-height: 1em;
	gap: 0.5rem;
	font-weight: 600;
	text-decoration-line: none;
	transition-duration: 0.2s;
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	border-width: var(--border-btn, 1px);
	animation: button-pop var(--animation-btn, 0.25s) ease-out;
	transition-property: color, background-color, border-color, opacity, box-shadow, transform;
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
	--tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
	outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
	background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
	--tw-bg-opacity: 1;
	--tw-border-opacity: 1;
}
.btn-disabled,
.btn:disabled,
.btn[disabled] {
	pointer-events: none;
}
.btn-square {
	height: 3rem;
	width: 3rem;
	padding: 0;
}
.btn-circle {
	height: 3rem;
	width: 3rem;
	border-radius: 9999px;
	padding: 0;
}
:where(.btn:is(input[type='checkbox'])),
:where(.btn:is(input[type='radio'])) {
	width: auto;
	appearance: none;
}
.btn:is(input[type='checkbox']):after,
.btn:is(input[type='radio']):after {
	--tw-content: attr(aria-label);
	content: var(--tw-content);
}
.card {
	position: relative;
	display: flex;
	flex-direction: column;
	border-radius: var(--rounded-box, 1rem);
}
.card:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.card-body {
	display: flex;
	flex: 1 1 auto;
	flex-direction: column;
	padding: var(--padding-card, 2rem);
	gap: 0.5rem;
}
.card-body :where(p) {
	flex-grow: 1;
}
.card-actions {
	display: flex;
	flex-wrap: wrap;
	align-items: flex-start;
	gap: 0.5rem;
}
.card figure {
	display: flex;
	align-items: center;
	justify-content: center;
}
.card.image-full {
	display: grid;
}
.card.image-full:before {
	position: relative;
	content: '';
	z-index: 10;
	border-radius: var(--rounded-box, 1rem);
	--tw-bg-opacity: 1;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	opacity: 0.75;
}
.card.image-full:before,
.card.image-full > * {
	grid-column-start: 1;
	grid-row-start: 1;
}
.card.image-full > figure img {
	height: 100%;
	object-fit: cover;
}
.card.image-full > .card-body {
	position: relative;
	z-index: 20;
	--tw-text-opacity: 1;
	color: var(--fallback-nc, oklch(var(--nc) / var(--tw-text-opacity)));
}
.chat {
	display: grid;
	grid-template-columns: repeat(2, minmax(0, 1fr));
	column-gap: 0.75rem;
	padding-top: 0.25rem;
	padding-bottom: 0.25rem;
}
.chat-image {
	grid-row: span 2 / span 2;
	align-self: flex-end;
}
.chat-header {
	grid-row-start: 1;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.chat-footer {
	grid-row-start: 3;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.chat-bubble {
	position: relative;
	display: block;
	width: fit-content;
	padding-left: 1rem;
	padding-right: 1rem;
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
	max-width: 90%;
	border-radius: var(--rounded-box, 1rem);
	min-height: 2.75rem;
	min-width: 2.75rem;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-nc, oklch(var(--nc) / var(--tw-text-opacity)));
}
.chat-bubble:before {
	position: absolute;
	bottom: 0;
	height: 0.75rem;
	width: 0.75rem;
	background-color: inherit;
	content: '';
	-webkit-mask-size: contain;
	mask-size: contain;
	-webkit-mask-repeat: no-repeat;
	mask-repeat: no-repeat;
	-webkit-mask-position: center;
	mask-position: center;
}
.chat-start {
	place-items: start;
	grid-template-columns: auto 1fr;
}
.chat-start .chat-header {
	grid-column-start: 2;
}
.chat-start .chat-footer {
	grid-column-start: 2;
}
.chat-start .chat-image {
	grid-column-start: 1;
}
.chat-start .chat-bubble {
	grid-column-start: 2;
	border-end-start-radius: 0px;
}
.chat-start .chat-bubble:before {
	-webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
	mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
	inset-inline-start: -0.749rem;
}
[dir='rtl'] .chat-start .chat-bubble:before {
	-webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
	mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
}
.chat-end {
	place-items: end;
	grid-template-columns: 1fr auto;
}
.chat-end .chat-header {
	grid-column-start: 1;
}
.chat-end .chat-footer {
	grid-column-start: 1;
}
.chat-end .chat-image {
	grid-column-start: 2;
}
.chat-end .chat-bubble {
	grid-column-start: 1;
	border-end-end-radius: 0px;
}
.chat-end .chat-bubble:before {
	-webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
	mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 1 3 L 3 3 C 2 3 0 1 0 0'/%3e%3c/svg%3e");
	inset-inline-start: 99.9%;
}
[dir='rtl'] .chat-end .chat-bubble:before {
	-webkit-mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
	mask-image: url("data:image/svg+xml,%3csvg width='3' height='3' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m 0 3 L 3 3 L 3 0 C 3 1 1 3 0 3'/%3e%3c/svg%3e");
}
.checkbox {
	flex-shrink: 0;
	--chkbg: var(--fallback-bc, oklch(var(--bc) / 1));
	--chkfg: var(--fallback-b1, oklch(var(--b1) / 1));
	height: 1.5rem;
	width: 1.5rem;
	cursor: pointer;
	appearance: none;
	border-radius: var(--rounded-btn, 0.5rem);
	border-width: 1px;
	border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
	--tw-border-opacity: 0.2;
}
:root .countdown {
	line-height: 1em;
}
.countdown {
	display: inline-flex;
}
.countdown > * {
	height: 1em;
	display: inline-block;
	overflow-y: hidden;
}
.countdown > :before {
	position: relative;
	content: '00\A 01\A 02\A 03\A 04\A 05\A 06\A 07\A 08\A 09\A 10\A 11\A 12\A 13\A 14\A 15\A 16\A 17\A 18\A 19\A 20\A 21\A 22\A 23\A 24\A 25\A 26\A 27\A 28\A 29\A 30\A 31\A 32\A 33\A 34\A 35\A 36\A 37\A 38\A 39\A 40\A 41\A 42\A 43\A 44\A 45\A 46\A 47\A 48\A 49\A 50\A 51\A 52\A 53\A 54\A 55\A 56\A 57\A 58\A 59\A 60\A 61\A 62\A 63\A 64\A 65\A 66\A 67\A 68\A 69\A 70\A 71\A 72\A 73\A 74\A 75\A 76\A 77\A 78\A 79\A 80\A 81\A 82\A 83\A 84\A 85\A 86\A 87\A 88\A 89\A 90\A 91\A 92\A 93\A 94\A 95\A 96\A 97\A 98\A 99\A';
	white-space: pre;
	top: calc(var(--value) * -1em);
	text-align: center;
	transition: all 1s cubic-bezier(1, 0, 0, 1);
}
.divider {
	display: flex;
	flex-direction: row;
	align-items: center;
	align-self: stretch;
	margin-top: 1rem;
	margin-bottom: 1rem;
	height: 1rem;
	white-space: nowrap;
}
.divider:after,
.divider:before {
	height: 0.125rem;
	width: 100%;
	flex-grow: 1;
	--tw-content: '';
	content: var(--tw-content);
	background-color: var(--fallback-bc, oklch(var(--bc) / 0.1));
}
.divider-start:before {
	display: none;
}
.divider-end:after {
	display: none;
}
@media (hover: hover) {
	.dropdown.dropdown-hover:hover .dropdown-content {
		visibility: visible;
		opacity: 1;
	}
	.btm-nav > .disabled:hover,
	.btm-nav > [disabled]:hover {
		pointer-events: none;
		--tw-border-opacity: 0;
		background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
		--tw-bg-opacity: 0.1;
		color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
		--tw-text-opacity: 0.2;
	}
	.btn:hover {
		--tw-border-opacity: 1;
		border-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-border-opacity)));
		--tw-bg-opacity: 1;
		background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
	}
	@supports (color: color-mix(in oklab, black, black)) {
		.btn:hover {
			background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%, #000);
			border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%, #000);
		}
	}
	@supports not (color: oklch(0 0 0)) {
		.btn:hover {
			background-color: var(--btn-color, var(--fallback-b2));
			border-color: var(--btn-color, var(--fallback-b2));
		}
	}
	.btn.glass:hover {
		--glass-opacity: 25%;
		--glass-border-opacity: 15%;
	}
	.btn-ghost:hover {
		border-color: transparent;
	}
	@supports (color: oklch(0 0 0)) {
		.btn-ghost:hover {
			background-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
		}
	}
	.btn-link:hover {
		border-color: transparent;
		background-color: transparent;
		text-decoration-line: underline;
	}
	.btn-outline:hover {
		--tw-border-opacity: 1;
		border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
		--tw-bg-opacity: 1;
		background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
		--tw-text-opacity: 1;
		color: var(--fallback-b1, oklch(var(--b1) / var(--tw-text-opacity)));
	}
	.btn-outline.btn-primary:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
	}
	@supports (color: color-mix(in oklab, black, black)) {
		.btn-outline.btn-primary:hover {
			background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, #000);
			border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, #000);
		}
	}
	.btn-outline.btn-secondary:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-sc, oklch(var(--sc) / var(--tw-text-opacity)));
	}
	@supports (color: color-mix(in oklab, black, black)) {
		.btn-outline.btn-secondary:hover {
			background-color: color-mix(in oklab, var(--fallback-s, oklch(var(--s) / 1)) 90%, #000);
			border-color: color-mix(in oklab, var(--fallback-s, oklch(var(--s) / 1)) 90%, #000);
		}
	}
	.btn-outline.btn-accent:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-ac, oklch(var(--ac) / var(--tw-text-opacity)));
	}
	@supports (color: color-mix(in oklab, black, black)) {
		.btn-outline.btn-accent:hover {
			background-color: color-mix(in oklab, var(--fallback-a, oklch(var(--a) / 1)) 90%, #000);
			border-color: color-mix(in oklab, var(--fallback-a, oklch(var(--a) / 1)) 90%, #000);
		}
	}
	.btn-outline.btn-success:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
	}
	@supports (color: color-mix(in oklab, black, black)) {
		.btn-outline.btn-success:hover {
			background-color: color-mix(in oklab, var(--fallback-su, oklch(var(--su) / 1)) 90%, #000);
			border-color: color-mix(in oklab, var(--fallback-su, oklch(var(--su) / 1)) 90%, #000);
		}
	}
	.btn-outline.btn-info:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-inc, oklch(var(--inc) / var(--tw-text-opacity)));
	}
	@supports (color: color-mix(in oklab, black, black)) {
		.btn-outline.btn-info:hover {
			background-color: color-mix(in oklab, var(--fallback-in, oklch(var(--in) / 1)) 90%, #000);
			border-color: color-mix(in oklab, var(--fallback-in, oklch(var(--in) / 1)) 90%, #000);
		}
	}
	.btn-outline.btn-warning:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-wac, oklch(var(--wac) / var(--tw-text-opacity)));
	}
	@supports (color: color-mix(in oklab, black, black)) {
		.btn-outline.btn-warning:hover {
			background-color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa) / 1)) 90%, #000);
			border-color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa) / 1)) 90%, #000);
		}
	}
	.btn-outline.btn-error:hover {
		--tw-text-opacity: 1;
		color: var(--fallback-erc, oklch(var(--erc) / var(--tw-text-opacity)));
	}
	@supports (color: color-mix(in oklab, black, black)) {
		.btn-outline.btn-error:hover {
			background-color: color-mix(in oklab, var(--fallback-er, oklch(var(--er) / 1)) 90%, #000);
			border-color: color-mix(in oklab, var(--fallback-er, oklch(var(--er) / 1)) 90%, #000);
		}
	}
	.btn-disabled:hover,
	.btn:disabled:hover,
	.btn[disabled]:hover {
		--tw-border-opacity: 0;
		background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
		--tw-bg-opacity: 0.2;
		color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
		--tw-text-opacity: 0.2;
	}
	@supports (color: color-mix(in oklab, black, black)) {
		.btn:is(input[type='checkbox']:checked):hover,
		.btn:is(input[type='radio']:checked):hover {
			background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, #000);
			border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, #000);
		}
	}
	.dropdown.dropdown-hover:hover .dropdown-content {
		--tw-scale-x: 1;
		--tw-scale-y: 1;
		transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
	}
	:where(.menu li:not(.menu-title, .disabled) > :not(ul, details, .menu-title)):not(.active, .btn):hover,
	:where(.menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.active, .btn):hover {
		cursor: pointer;
		outline: 2px solid transparent;
		outline-offset: 2px;
	}
	@supports (color: oklch(0 0 0)) {
		:where(.menu li:not(.menu-title, .disabled) > :not(ul, details, .menu-title)):not(.active, .btn):hover,
		:where(.menu li:not(.menu-title, .disabled) > details > summary:not(.menu-title)):not(.active, .btn):hover {
			background-color: var(--fallback-bc, oklch(var(--bc) / 0.1));
		}
	}
	.tab[disabled],
	.tab[disabled]:hover {
		cursor: not-allowed;
		color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
		--tw-text-opacity: 0.2;
	}
}
.file-input {
	height: 3rem;
	flex-shrink: 1;
	padding-inline-end: 1rem;
	font-size: 1rem;
	line-height: 2;
	line-height: 1.5rem;
	overflow: hidden;
	border-radius: var(--rounded-btn, 0.5rem);
	border-width: 1px;
	border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
	--tw-border-opacity: 0;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
}
.file-input::file-selector-button {
	margin-inline-end: 1rem;
	display: inline-flex;
	height: 100%;
	flex-shrink: 0;
	cursor: pointer;
	-webkit-user-select: none;
	user-select: none;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	padding-left: 1rem;
	padding-right: 1rem;
	text-align: center;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 1em;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
	transition-duration: 0.2s;
	border-style: solid;
	--tw-border-opacity: 1;
	border-color: var(--fallback-n, oklch(var(--n) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	font-weight: 600;
	text-transform: uppercase;
	--tw-text-opacity: 1;
	color: var(--fallback-nc, oklch(var(--nc) / var(--tw-text-opacity)));
	text-decoration-line: none;
	border-width: var(--border-btn, 1px);
	animation: button-pop var(--animation-btn, 0.25s) ease-out;
}
.input {
	flex-shrink: 1;
	appearance: none;
	height: 3rem;
	padding-left: 1rem;
	padding-right: 1rem;
	font-size: 1rem;
	line-height: 2;
	line-height: 1.5rem;
	border-radius: var(--rounded-btn, 0.5rem);
	border-width: 1px;
	border-color: transparent;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b1, oklch(var(--b1) / var(--tw-bg-opacity)));
}
.radio {
	flex-shrink: 0;
	--chkbg: var(--bc);
	height: 1.5rem;
	width: 1.5rem;
	cursor: pointer;
	appearance: none;
	border-radius: 9999px;
	border-width: 1px;
	border-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-border-opacity)));
	--tw-border-opacity: 0.2;
}
@supports not (color: oklch(0 0 0)) {
	.btn {
		background-color: var(--btn-color, var(--fallback-b2));
		border-color: var(--btn-color, var(--fallback-b2));
	}
	.btn-primary {
		--btn-color: var(--fallback-p);
	}
	.btn-secondary {
		--btn-color: var(--fallback-s);
	}
	.btn-accent {
		--btn-color: var(--fallback-a);
	}
	.btn-neutral {
		--btn-color: var(--fallback-n);
	}
	.btn-info {
		--btn-color: var(--fallback-in);
	}
	.btn-success {
		--btn-color: var(--fallback-su);
	}
	.btn-warning {
		--btn-color: var(--fallback-wa);
	}
	.btn-error {
		--btn-color: var(--fallback-er);
	}
	.prose :where(code):not(:where([class~='not-prose'] *, pre *)) {
		background-color: var(--fallback-b3, oklch(var(--b3) / 1));
	}
}
@supports (color: color-mix(in oklab, black, black)) {
	.btn-active {
		background-color: color-mix(in oklab, oklch(var(--btn-color, var(--b3)) / var(--tw-bg-opacity, 1)) 90%, #000);
		border-color: color-mix(in oklab, oklch(var(--btn-color, var(--b3)) / var(--tw-border-opacity, 1)) 90%, #000);
	}
	.btn-outline.btn-primary.btn-active {
		background-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-p, oklch(var(--p) / 1)) 90%, #000);
	}
	.btn-outline.btn-secondary.btn-active {
		background-color: color-mix(in oklab, var(--fallback-s, oklch(var(--s) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-s, oklch(var(--s) / 1)) 90%, #000);
	}
	.btn-outline.btn-accent.btn-active {
		background-color: color-mix(in oklab, var(--fallback-a, oklch(var(--a) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-a, oklch(var(--a) / 1)) 90%, #000);
	}
	.btn-outline.btn-success.btn-active {
		background-color: color-mix(in oklab, var(--fallback-su, oklch(var(--su) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-su, oklch(var(--su) / 1)) 90%, #000);
	}
	.btn-outline.btn-info.btn-active {
		background-color: color-mix(in oklab, var(--fallback-in, oklch(var(--in) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-in, oklch(var(--in) / 1)) 90%, #000);
	}
	.btn-outline.btn-warning.btn-active {
		background-color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-wa, oklch(var(--wa) / 1)) 90%, #000);
	}
	.btn-outline.btn-error.btn-active {
		background-color: color-mix(in oklab, var(--fallback-er, oklch(var(--er) / 1)) 90%, #000);
		border-color: color-mix(in oklab, var(--fallback-er, oklch(var(--er) / 1)) 90%, #000);
	}
}
.btn:focus-visible {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
}
.btn-primary {
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
	outline-color: var(--fallback-p, oklch(var(--p) / 1));
}
@supports (color: oklch(0 0 0)) {
	.btn-primary {
		--btn-color: var(--p);
	}
	.btn-secondary {
		--btn-color: var(--s);
	}
	.btn-accent {
		--btn-color: var(--a);
	}
	.btn-neutral {
		--btn-color: var(--n);
	}
	.btn-info {
		--btn-color: var(--in);
	}
	.btn-success {
		--btn-color: var(--su);
	}
	.btn-warning {
		--btn-color: var(--wa);
	}
	.btn-error {
		--btn-color: var(--er);
	}
}
.btn-outline {
	border-color: currentColor;
	background-color: transparent;
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-shadow: 0 0 #0000;
	--tw-shadow-colored: 0 0 #0000;
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.btn.btn-disabled,
.btn:disabled,
.btn[disabled] {
	--tw-border-opacity: 0;
	background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
	--tw-bg-opacity: 0.2;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	--tw-text-opacity: 0.2;
}
.btn:is(input[type='checkbox']:checked),
.btn:is(input[type='radio']:checked) {
	--tw-border-opacity: 1;
	border-color: var(--fallback-p, oklch(var(--p) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}
.btn:is(input[type='checkbox']:checked):focus-visible,
.btn:is(input[type='radio']:checked):focus-visible {
	outline-color: var(--fallback-p, oklch(var(--p) / 1));
}
@keyframes button-pop {
	0% {
		transform: scale(var(--btn-focus-scale, 0.98));
	}
	40% {
		transform: scale(1.02);
	}
	100% {
		transform: scale(1);
	}
}
.card :where(figure:first-child) {
	overflow: hidden;
	border-start-start-radius: inherit;
	border-start-end-radius: inherit;
	border-end-start-radius: unset;
	border-end-end-radius: unset;
}
.card :where(figure:last-child) {
	overflow: hidden;
	border-start-start-radius: unset;
	border-start-end-radius: unset;
	border-end-start-radius: inherit;
	border-end-end-radius: inherit;
}
.card:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: 2px;
}
.card.bordered {
	border-width: 1px;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
}
.card-bordered {
	border-width: 1px;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
}
.card.compact .card-body {
	padding: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.card-title {
	display: flex;
	align-items: center;
	gap: 0.5rem;
	font-size: 1.25rem;
	line-height: 1.75rem;
	font-weight: 600;
}
.card.image-full :where(figure) {
	overflow: hidden;
	border-radius: inherit;
}
.carousel::-webkit-scrollbar {
	display: none;
}
.chat-bubble-primary {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}
.chat-bubble-secondary {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-s, oklch(var(--s) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-sc, oklch(var(--sc) / var(--tw-text-opacity)));
}
.chat-bubble-accent {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-a, oklch(var(--a) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-ac, oklch(var(--ac) / var(--tw-text-opacity)));
}
.chat-bubble-info {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-in, oklch(var(--in) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-inc, oklch(var(--inc) / var(--tw-text-opacity)));
}
.chat-bubble-success {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-su, oklch(var(--su) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-suc, oklch(var(--suc) / var(--tw-text-opacity)));
}
.chat-bubble-warning {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-wa, oklch(var(--wa) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-wac, oklch(var(--wac) / var(--tw-text-opacity)));
}
.chat-bubble-error {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-er, oklch(var(--er) / var(--tw-bg-opacity)));
	--tw-text-opacity: 1;
	color: var(--fallback-erc, oklch(var(--erc) / var(--tw-text-opacity)));
}
.checkbox:focus {
	box-shadow: none;
}
.checkbox:focus-visible {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
	outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
}
.checkbox:checked,
.checkbox[aria-checked='true'],
.checkbox[checked='true'] {
	background-repeat: no-repeat;
	animation: checkmark var(--animation-input, 0.2s) ease-out;
	background-color: var(--chkbg);
	background-image: linear-gradient(-45deg, transparent 65%, var(--chkbg) 65.99%), linear-gradient(45deg, transparent 75%, var(--chkbg) 75.99%),
		linear-gradient(-45deg, var(--chkbg) 40%, transparent 40.99%), linear-gradient(45deg, var(--chkbg) 30%, var(--chkfg) 30.99%, var(--chkfg) 40%, transparent 40.99%),
		linear-gradient(-45deg, var(--chkfg) 50%, var(--chkbg) 50.99%);
}
.checkbox:indeterminate {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	background-repeat: no-repeat;
	animation: checkmark var(--animation-input, 0.2s) ease-out;
	background-image: linear-gradient(90deg, transparent 80%, var(--chkbg) 80%), linear-gradient(-90deg, transparent 80%, var(--chkbg) 80%),
		linear-gradient(0deg, var(--chkbg) 43%, var(--chkfg) 43%, var(--chkfg) 57%, var(--chkbg) 57%);
}
.checkbox:disabled {
	cursor: not-allowed;
	border-color: transparent;
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	opacity: 0.2;
}
@keyframes checkmark {
	0% {
		background-position-y: 5px;
	}
	50% {
		background-position-y: -2px;
	}
	100% {
		background-position-y: 0;
	}
}
.checkbox-mark {
	display: none;
}
.divider:not(:empty) {
	gap: 1rem;
}
.file-input-bordered {
	--tw-border-opacity: 0.2;
}
.file-input:focus {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
	outline-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.file-input-ghost {
	--tw-bg-opacity: 0.05;
}
.file-input-ghost:focus {
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	box-shadow: none;
}
.file-input-ghost::file-selector-button {
	border-width: 1px;
	border-color: transparent;
	background-color: transparent;
	color: currentColor;
}
.label-text {
	font-size: 0.875rem;
	line-height: 1.25rem;
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
}
.label-text-alt {
	font-size: 0.75rem;
	line-height: 1rem;
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
}
.input input {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
	background-color: transparent;
}
.input input:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.input[list]::-webkit-calendar-picker-indicator {
	line-height: 1em;
}
.input-bordered {
	border-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.input:focus,
.input:focus-within {
	box-shadow: none;
	border-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
	outline-color: var(--fallback-bc, oklch(var(--bc) / 0.2));
}
.input-ghost {
	--tw-bg-opacity: 0.05;
}
.input-ghost:focus,
.input-ghost:focus-within {
	--tw-bg-opacity: 1;
	--tw-text-opacity: 1;
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
	box-shadow: none;
}
.input-disabled,
.input:disabled,
.input[disabled] {
	cursor: not-allowed;
	--tw-border-opacity: 1;
	border-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-border-opacity)));
	--tw-bg-opacity: 1;
	background-color: var(--fallback-b2, oklch(var(--b2) / var(--tw-bg-opacity)));
	color: var(--fallback-bc, oklch(var(--bc) / 0.4));
}
.input-disabled::placeholder,
.input:disabled::placeholder,
.input[disabled]::placeholder {
	color: var(--fallback-bc, oklch(var(--bc) / var(--tw-placeholder-opacity)));
	--tw-placeholder-opacity: 0.2;
}
.input::-webkit-date-and-time-value {
	text-align: inherit;
}
.link:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}
.link:focus-visible {
	outline: 2px solid currentColor;
	outline-offset: 2px;
}
.radio:focus {
	box-shadow: none;
}
.radio:focus-visible {
	outline-style: solid;
	outline-width: 2px;
	outline-offset: 2px;
	outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
}
.radio:checked,
.radio[aria-checked='true'] {
	--tw-bg-opacity: 1;
	background-color: var(--fallback-bc, oklch(var(--bc) / var(--tw-bg-opacity)));
	background-image: none;
	animation: radiomark var(--animation-input, 0.2s) ease-out;
	box-shadow: 0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset, 0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
}
.radio:disabled {
	cursor: not-allowed;
	opacity: 0.2;
}
@keyframes radiomark {
	0% {
		box-shadow: 0 0 0 12px var(--fallback-b1, oklch(var(--b1) / 1)) inset, 0 0 0 12px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
	}
	50% {
		box-shadow: 0 0 0 3px var(--fallback-b1, oklch(var(--b1) / 1)) inset, 0 0 0 3px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
	}
	100% {
		box-shadow: 0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset, 0 0 0 4px var(--fallback-b1, oklch(var(--b1) / 1)) inset;
	}
}
.radio-mark {
	display: none;
}
.border-transparent {
	border-color: transparent;
}
.border-transparent\/0 {
	border-color: rgb(0 0 0 / 0);
}
.border-transparent\/10 {
	border-color: rgb(0 0 0 / 0.1);
}
.border-transparent\/100 {
	border-color: rgb(0 0 0 / 1);
}
.border-transparent\/20 {
	border-color: rgb(0 0 0 / 0.2);
}
.border-transparent\/25 {
	border-color: rgb(0 0 0 / 0.25);
}
.border-transparent\/30 {
	border-color: rgb(0 0 0 / 0.3);
}
.border-transparent\/40 {
	border-color: rgb(0 0 0 / 0.4);
}
.border-transparent\/5 {
	border-color: rgb(0 0 0 / 0.05);
}
.border-transparent\/50 {
	border-color: rgb(0 0 0 / 0.5);
}
.border-transparent\/60 {
	border-color: rgb(0 0 0 / 0.6);
}
.border-transparent\/70 {
	border-color: rgb(0 0 0 / 0.7);
}
.border-transparent\/75 {
	border-color: rgb(0 0 0 / 0.75);
}
.border-transparent\/80 {
	border-color: rgb(0 0 0 / 0.8);
}
.border-transparent\/90 {
	border-color: rgb(0 0 0 / 0.9);
}
.border-transparent\/95 {
	border-color: rgb(0 0 0 / 0.95);
}
.btn-xs {
	height: 1.5rem;
	min-height: 1.5rem;
	padding-left: 0.5rem;
	padding-right: 0.5rem;
	font-size: 0.75rem;
}
.btn-sm {
	height: 2rem;
	min-height: 2rem;
	padding-left: 0.75rem;
	padding-right: 0.75rem;
	font-size: 0.875rem;
}
.btn-md {
	height: 3rem;
	min-height: 3rem;
	padding-left: 1rem;
	padding-right: 1rem;
	font-size: 0.875rem;
}
.btn-lg {
	height: 4rem;
	min-height: 4rem;
	padding-left: 1.5rem;
	padding-right: 1.5rem;
	font-size: 1.125rem;
}
.btn-wide {
	width: 16rem;
}
.btn-block {
	width: 100%;
}
.btn-square:where(.btn-xs) {
	height: 1.5rem;
	width: 1.5rem;
	padding: 0;
}
.btn-square:where(.btn-sm) {
	height: 2rem;
	width: 2rem;
	padding: 0;
}
.btn-square:where(.btn-md) {
	height: 3rem;
	width: 3rem;
	padding: 0;
}
.btn-square:where(.btn-lg) {
	height: 4rem;
	width: 4rem;
	padding: 0;
}
.btn-circle:where(.btn-xs) {
	height: 1.5rem;
	width: 1.5rem;
	border-radius: 9999px;
	padding: 0;
}
.btn-circle:where(.btn-sm) {
	height: 2rem;
	width: 2rem;
	border-radius: 9999px;
	padding: 0;
}
.btn-circle:where(.btn-md) {
	height: 3rem;
	width: 3rem;
	border-radius: 9999px;
	padding: 0;
}
.btn-circle:where(.btn-lg) {
	height: 4rem;
	width: 4rem;
	border-radius: 9999px;
	padding: 0;
}
.card-side {
	align-items: stretch;
	flex-direction: row;
}
.card-side :where(figure:first-child) {
	overflow: hidden;
	border-start-start-radius: inherit;
	border-start-end-radius: unset;
	border-end-start-radius: inherit;
	border-end-end-radius: unset;
}
.card-side :where(figure:last-child) {
	overflow: hidden;
	border-start-start-radius: unset;
	border-start-end-radius: inherit;
	border-end-start-radius: unset;
	border-end-end-radius: inherit;
}
.card-side figure > * {
	max-width: unset;
}
:where(.card-side figure > *) {
	width: 100%;
	height: 100%;
	object-fit: cover;
}
[type='checkbox'].checkbox-xs {
	height: 1rem;
	width: 1rem;
}
[type='checkbox'].checkbox-sm {
	height: 1.25rem;
	width: 1.25rem;
}
[type='checkbox'].checkbox-md {
	height: 1.5rem;
	width: 1.5rem;
}
[type='checkbox'].checkbox-lg {
	height: 2rem;
	width: 2rem;
}
.divider-horizontal {
	flex-direction: column;
}
.divider-horizontal:before {
	height: 100%;
	width: 0.125rem;
}
.divider-horizontal:after {
	height: 100%;
	width: 0.125rem;
}
.divider-vertical {
	flex-direction: row;
}
.divider-vertical:before {
	height: 0.125rem;
	width: 100%;
}
.divider-vertical:after {
	height: 0.125rem;
	width: 100%;
}
.file-input-xs {
	height: 1.5rem;
	padding-inline-end: 0.5rem;
	font-size: 0.75rem;
	line-height: 1rem;
	line-height: 1.625;
}
.file-input-xs::file-selector-button {
	margin-right: 0.5rem;
	font-size: 0.75rem;
}
.file-input-sm {
	height: 2rem;
	padding-inline-end: 0.75rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 2;
}
.file-input-sm::file-selector-button {
	margin-right: 0.75rem;
	font-size: 0.875rem;
}
.file-input-md {
	height: 3rem;
	padding-inline-end: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	line-height: 2;
}
.file-input-md::file-selector-button {
	margin-right: 1rem;
	font-size: 0.875rem;
}
.file-input-lg {
	height: 4rem;
	padding-inline-end: 1.5rem;
	font-size: 1.125rem;
	line-height: 1.75rem;
	line-height: 2;
}
.file-input-lg::file-selector-button {
	margin-right: 1.5rem;
	font-size: 1.125rem;
}
.card-compact .card-body {
	padding: 1rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
}
.card-compact .card-title {
	margin-bottom: 0.25rem;
}
.card-normal .card-body {
	padding: var(--padding-card, 2rem);
	font-size: 1rem;
	line-height: 1.5rem;
}
.card-normal .card-title {
	margin-bottom: 0.75rem;
}
